<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Gcp | Awesome Web Blog]]></title>
  <link href="http://anoobbava.github.io/blog/categories/gcp/atom.xml" rel="self"/>
  <link href="http://anoobbava.github.io/"/>
  <updated>2018-07-02T20:18:17+05:30</updated>
  <id>http://anoobbava.github.io/</id>
  <author>
    <name><![CDATA[Anoob Bava]]></name>
    <email><![CDATA[anoob.bava@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GCP:4 Deployment Using Mina]]></title>
    <link href="http://anoobbava.github.io/blog/2018/06/28/deployment-using-mina/"/>
    <updated>2018-06-28T21:18:28+05:30</updated>
    <id>http://anoobbava.github.io/blog/2018/06/28/deployment-using-mina</id>
    <content type="html"><![CDATA[<h2>Introduction</h2>

<p>This is the last blog which deals with the GCP deployment, here our main area of
topic is the mina &ldquo;a blazing fast deployment tool&rdquo;.Which is executed as a
Rake.Also need to install and setup is pretty, no worries. Advantage is that we
check-in the code to the github.Only the place is the config/deploy.rb.Also we
can implement DRY principle to the deployment script.Which means;we can use the
same script to deploy the app to staging, QA and even Production.</p>

<p><img src="/images/mina/1.png" width="400" height="100"></p>

<p><a href="https://github.com/mina-deploy/mina">mina github link</a></p>

<h2>How the deployment process done ??</h2>

<p> We are dividing the deployment to below section to easily understand and
deployment.</p>

<ol>
<li>setup and install mina gem</li>
<li>mina Rake</li>
<li>script to deploy</li>
<li>running the Rake.</li>
<li>setup nginx and unicorn</li>
<li>known issues while occured in the deployment and fixing.</li>
</ol>


<h3>1.Setup and install mina gem</h3>

<p><img src="/images/mina/2.png" width="600" height="100"></p>

<p>Add the below gem to the development group.</p>

<pre><code>  gem 'mina', '~&gt; 1.2', '&gt;= 1.2.3'
</code></pre>

<p>Now what we need to add is the mina-unicorn gem, this will used to deploy
unicorn with mina.</p>

<pre><code>  gem 'mina-unicorn', '~&gt; 2.0'
</code></pre>

<p>then do</p>

<pre><code>  bundle install
</code></pre>

<h3>2.mina Rake</h3>

<p>mina works like a rake task.There is a another command</p>

<pre><code>  mina init
</code></pre>

<p>it will create the configuration file in the config/deploy.rb</p>

<p><img src="/images/mina/3.png" width="400" height="100"></p>

<p>Hooray, A major part is done, now we need to add the tasks we are going to use
in the <em>deploy.rb</em>
You can use your own tasks, based on the taste, but i would like to follow the
old practices like the setup and deploy</p>

<p><em>setup</em></p>

<p>In this rake, we are going to deals with the basic details like creating the
folders, creating the temp folders, etc.</p>

<p><em>deploy</em></p>

<p>This rake mainly deals with clone the app and kill the pid, bundle install, migrate the app, migrate, precompile the assets.</p>

<h3>3.mina script</h3>

<p>deploy.rb is the heart of the mina tool.We can configure that based on our requirement.I will give you basic explanation about the each of the commands here and updated the basic skeleton of the deploy.rb and also for verification, will updated with my own deploy.rb which is used in my blog_app.</p>

<p><em>skeleton of the deploy.rb</em></p>

<script src="https://gist.github.com/anoobbava/905c8aa332078d9ee4128e6b312484b1.js"></script>


<p><em>copy of my original deploy.rb file</em></p>

<script src="https://gist.github.com/anoobbava/2240c4066d39db1cebe3b787ad37e630.js"></script>


<p>Now our scripts are done.Copy this file into your app/config/deploy.rb file and</p>

<p>run the commands below,</p>

<h3>4.Running the Rake</h3>

<p>Before running the rake, ensure that you are added the<em> mina gem and mina-unicorn</em>
and bundle installed.</p>

<p>first run the command</p>

<pre><code>  mina setup
</code></pre>

<p><img src="/images/mina/4.png" width="600" height="200"></p>

<p>Now the setup execution is completion is success, there is nothing to worry in
this, now we are moving to the deploy command.</p>

<pre><code>  mina deploy
</code></pre>

<p><img src="/images/mina/5.png" width="900" height="400"></p>

<p><img src="/images/mina/6.png" width="900" height="400"></p>

<p><img src="/images/mina/7.png" width="900" height="400"></p>

<p>ah!!, We got the first error, that issue is because we don&rsquo;t specify the database
and the connector, then user name and password in the path.In order to do that,
go to our server terminal</p>

<p><img src="/images/mina/8.png" width="800" height="400"></p>

<p>Now we go to the app path , here it is blog_app/</p>

<p><img src="/images/mina/9.png" width="600" height="100"></p>

<p>Now go to the blog_app/ folder go to the <em>shared/config/</em> there is a file called
the database.yml and add the connection details there.</p>

<pre><code>staging:
  adapter: postgresql
  encoding: unicode
  database: blog_app_staging
  pool: 5
  host: localhost
  username: blog_user
  password: password
</code></pre>

<p><img src="/images/mina/10.png" width="600" height="100"></p>

<p>ah!, we got another error, that error comes because there is no database
configured.It is possible to create the database from the mina tool;but we will
do via console and we will explain that in another blog.</p>

<p><img src="/images/mina/11.png" width="900" height="400"></p>

<p>Now, we will create a database by logging to the server and using the below
command</p>

<pre><code>  sudo -i -u postgres
</code></pre>

<p>then using the below command, generate the database</p>

<pre><code>  createdb databasename
</code></pre>

<p><img src="/images/mina/12.png" width="600" height="100"></p>

<p>Next is grant access to the user to the new database.</p>

<pre><code>  grant all privileges on database databasename to username;
</code></pre>

<p><img src="/images/mina/13.png" width="900" height="400"></p>

<p>Please check the above image before executing the above command.</p>

<p>Now again will do the <em>mina deploy</em></p>

<p><img src="/images/mina/14.png" width="900" height="400" title="" ></p>

<p>Awesome, we are good to go, our app is deployed,but it is not for accessing our
browser, need to do some tweaks, Great working guys.</p>

<h3>5.setup nginx and unicorn</h3>

<p>Now, I want to check whether the nginx can be accessible via ip-address.</p>

<p>just go to ip-address in the browser,</p>

<p><img src="/images/mina/15.png" width="600" height="300"></p>

<p>Awesome, you got the output, now only some tweak is needed.</p>

<p>first update the nginx configuration with below configuration, it is normal
config, only we need to know about the pid file and error logs.</p>

<script src="https://gist.github.com/anoobbava/5d8bb925578412b3b3f1e500a68010e5.js"></script>


<p>now copy the config to the <em>/etc/nginx/sites-enabled/default</em> file.</p>

<p>then restart the nginx using the</p>

<pre><code>  sudo service nginx restart
</code></pre>

<p><img src="/images/mina/16.png" width="900" height="400"></p>

<p>now nginx is okay, please check the browser we are hitting and also check the
log if any errors are happening.Log will be in the below path</p>

<p><em>/var/log/nginx/error.log</em> and <em>/var/log/nginx/access.log</em></p>

<p>Awesome!!, it is hitting the nginx, but  the page is not loaded, so the issue is
with the unicorn, we will check the unicorn logs for this.</p>

<p>unicorn log will be in the <em>blog_app/shared/log/unicorn.stderr.log</em></p>

<p><img src="/images/mina/17.png" width="900" height="400" title="" ></p>

<p>tailing this error will reveal the real issue (ie tail -f nicorn.stderr.log)</p>

<p><img src="/images/mina/18.png" width="900" height="400"></p>

<p>cool, the error is because, we have not set the secret key base, in the
secrets.yml, need to set that and then proceed.</p>

<p><img src="/images/mina/19.png" width="900" height="400"></p>

<p>by running the below command from the current path in the server console,</p>

<pre><code>  bundle exec rake secret
</code></pre>

<p>then update the command in the <em>config/shared/secrets.yml</em> with like below</p>

<p><img src="/images/mina/20.png" width="900" height="400"></p>

<p><img src="/images/mina/21.png" width="900" height="400"></p>

<p><img src="/images/mina/22.png" width="900" height="400"></p>

<p>the reason for staging, we are deployed to staging server.</p>

<p>Now, repeat the steps like we already done</p>

<ol>
<li><p>restart the nginx</p></li>
<li><p>check the status of the nginx</p></li>
<li><p>mina deploy from the project terminal(not from the GCP terminal!!!)</p></li>
<li><p>tail -f /var/log/nginx/access.log to check it is hitting or not!!!</p></li>
<li><p>go to the ip-adress in the browser,</p></li>
</ol>


<p><img src="/images/mina/23.png" width="900" height="400"></p>

<p>hooray, we are all done, now we need to explore additional options like,how to
store the images, login issues etc. Please comment me if any issues happend</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GCP:3 Install Nginx and Setup Unicorn]]></title>
    <link href="http://anoobbava.github.io/blog/2018/06/21/gcp-3-install-nginx-and-setup-unicorn/"/>
    <updated>2018-06-21T18:15:15+05:30</updated>
    <id>http://anoobbava.github.io/blog/2018/06/21/gcp-3-install-nginx-and-setup-unicorn</id>
    <content type="html"><![CDATA[<h2>Introduction</h2>

<p>Hi All, this is the 3rd post of our deployment tool, so far we have covered the Setup for instance and installing ruby and postgres. Now what we want is to install the Nginx and Unicorn. Nginx is our App server and Unicorn is our web server. We are Not going to explain about the concepts of nginx and Unicorn; instead we used these tools to deploy our App.We already had a staging server, we used that to setup and installation.</p>

<h3>A little House keeping</h3>

<p>Image of the staging server is running.</p>

<p><img src="/images/gcp3/1.png" width="600" height="400"></p>

<p>terminal connection in staging server</p>

<p><img src="/images/gcp3/2.png" width="600" height="400"></p>

<h3>Setup Nginx</h3>

<pre><code>  sudo apt-get install nginx
</code></pre>

<p><img src="/images/gcp3/3.png" width="600" height="100"></p>

<p>Now Check the nginx status using</p>

<pre><code>  sudo service nginx status
</code></pre>

<p><img src="/images/gcp3/4.png" width="600" height="100"></p>

<p>other commands</p>

<p>to restart nginx</p>

<pre><code>sudo service nginx restart
</code></pre>

<p>to stop the nginx</p>

<pre><code>  sudo service nginx stop
</code></pre>

<p>to start the nginx</p>

<pre><code>  sudo service nginx start
</code></pre>

<p>here we are not configuring the nginx right now, we will do that later.</p>

<h3>Installing Unicorn</h3>

<p> Like I already said, we are using the unicorn as app server,by default puma is
the development server with Rails 5.X.X.</p>

<p>1.add the unicorn gem to production group
<code>
  gem 'unicorn'
</code>
<img src="/images/gcp3/5.png" width="400" height="100"></p>

<ol>
<li>add the unicorn configuration file in config/ path</li>
</ol>


<p><img src="/images/gcp3/6.png" width="800" height="100"></p>

<p>Consider only the unicorn.rb file only.The total scripts are added below for
verification, Like I already said, there are a lot of configurations are there.
Just google it for details.</p>

<script src="https://gist.github.com/anoobbava/cb5b1fa5a71f73a204a6c51ea1e03c08.js"></script>


<p>3.commit these code changes to our code base, since I have already commit those,
 I don&rsquo;t want do it again.
I know, it is only a short blog, we just covered here, will explained about
deployment using mina in the next blog,!!promise</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GCP:2 Install Ruby and Postgres]]></title>
    <link href="http://anoobbava.github.io/blog/2018/04/12/install-ruby-and-postgres-to-gcp-series2/"/>
    <updated>2018-04-12T15:51:22+05:30</updated>
    <id>http://anoobbava.github.io/blog/2018/04/12/install-ruby-and-postgres-to-gcp-series2</id>
    <content type="html"><![CDATA[<p>Hi All, Welcome to series 2, here are explaining about the ruby and Postgres installation to our GCP Server. If you know about that in linux 16.04 version, you can skip this tutorial. this is entirely based on the ubuntu 16.04 LTS machine and not much . I read the digital ocean, GoRails etc to publish this article and use the tehniques explained by them also.</p>

<h2>Install Ruby</h2>

<p>  first need to connect to our GCP using pem file.</p>

<p>  <img src="/images/series2/0.png" width="800" height="400"></p>

<h3>Install RVM</h3>

<h4>connect gpg keys</h4>

<pre><code>   sudo apt-get install gnupg2 -y
  gpg2 --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3
</code></pre>

<p>  <img src="/images/series2/2.png" width="800" height="400"></p>

<h4>Install curl</h4>

<p>  install curl if not installed</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install curl</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/3.png" width="800" height="400"></p>

<h4>Use curl for rvm script</h4>

<p>  Now use the curl to install the rvm script</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\curl -sSL &lt;a href="https://get.rvm.io">https://get.rvm.io&lt;/a> -o rvm.sh</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/4.png" width="800" height="400"></p>

<h4>Install RVM</h4>

<p>  Now, the below command installs the latest version of the rvm and does all the depandancies.</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat rvm.sh | bash -s stable</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/5.png" width="800" height="400">
  Now, install the lates version of Ruby, using the below command</p>

<h4>RVM use</h4>

<p>  Installing RVM to /home/username/.rvm/</p>

<p>  Adding rvm PATH line to /home/username/.profile /home/username/.mkshrc /homeusername/.bashrc /home/username/.zshrc.</p>

<p>  Adding rvm loading line to /home/username/.profile /home/username/.bash_profile /home/username/.zlogin.</p>

<p>  Installation of RVM in /home/username/.rvm/ is almost complete:</p>

<ul>
<li>To start using RVM you need to run
<code>
source /home/username/.rvm/scripts/rvm
</code>
in all your open shell windows, in rare cases you need to reopen all shell windows.</li>
</ul>


<h4>Install latest Ruby</h4>

<pre><code class="``">    rvm install ruby --default
</code></pre>

<p>  <img src="/images/series2/7.png" width="800" height="400"></p>

<h4>check the ruby Version</h4>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby -v</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/8.png" width="800" height="400"></p>

<h2>Install Postgres</h2>

<p>  execute the below commands one by one</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo sh -c &ldquo;echo &lsquo;deb &lt;a href="http://apt.postgresql.org/pub/repos/apt/">http://apt.postgresql.org/pub/repos/apt/&lt;/a> xenial-pgdg main&rsquo; > /etc/apt/sources.list.d/pgdg.list&rdquo;
</span><span class='line'>    wget &ndash;quiet -O - &lt;a href="http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc">http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc&lt;/a> | sudo apt-key add -
</span><span class='line'>    sudo apt-get update
</span><span class='line'>    sudo apt-get install postgresql-common
</span><span class='line'>    sudo apt-get install postgresql-9.5 libpq-dev</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/9.png" width="800" height="400">
  <img src="/images/series2/10.png" width="800" height="400">
  <img src="/images/series2/11.png" width="800" height="400">
  <img src="/images/series2/12.png" width="800" height="400">
  <img src="/images/series2/13.png" width="800" height="400"></p>

<h4>Roles in postgres</h4>

<p>  by default postgres create a root user called role here is &ldquo;postgres&rdquo;</p>

<p>  to use that</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo -i -u postgres</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/30.png" width="800" height="400"></p>

<h4>Create a New Role</h4>

<p>  We entered to the console, now, create a new Role.</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>createuser &ndash;interactive</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/15.png" width="800" height="400"></p>

<p>now, the user is created, now to check that type</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>psql</span></code></pre></td></tr></table></div></figure></p>

<p>when the console comes, then type</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\du</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/16.png" width="800" height="400"></p>

<h4>To set Password for User</h4>

<p>go to the psql by command</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo -u postgres psql</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/17.png" width="800" height="400"></p>

<p>  type</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\password user_name</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/18.png" width="800" height="400"></p>

<p>this is the end of series, will post more in another series</p>

<p>all set. thanks guys, comment if any error or doubt happend.</p>

<p><a href = "https://anoobbava.github.io/blog/2018/06/21/gcp-3-install-nginx-and-setup-unicorn/">install and setup unicorn GCP3 </a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GCP:1 Rails App Deployment Using GCP]]></title>
    <link href="http://anoobbava.github.io/blog/2018/04/11/rails-app-deployment-using-gcp/"/>
    <updated>2018-04-11T00:32:23+05:30</updated>
    <id>http://anoobbava.github.io/blog/2018/04/11/rails-app-deployment-using-gcp</id>
    <content type="html"><![CDATA[<h2>Deployment using GCP</h2>

<p><img src="/images/gcp-1/0.png" width="800" height="300"></p>

<p>This will be a series of tutorials in which step by step deployment of a ROR project in Google Cloud or GCP. From here onwards it is mentioned as GCP.</p>

<h2>Why GCP</h2>

<p>I am a huge Fan of Open Source Technologies, I have used the Heroku Free Tier, RedHat,Engine Yard Also. I have been tried to use the AWS for a long time. The issue with AWS is that it has free tier but needed credit card to sign-up.Also In the case of heroku, is a PAAS Application and all the process are automated and customisation is less.</p>

<h4>Pros of GCP</h4>

<ol>
<li>comes from Google , oh! Yaaah</li>
<li>No need of credit Card</li>
<li>Need only debit card with VISA or MASTER CARD.</li>
<li>gives us the $300 credit once signup.</li>
<li>$300 credit for 12 months</li>
</ol>


<p><code>Google Cloud Platform, offered by Google, is a suite of cloud computing services that runs on the same infrastructure that Google uses internally for its end-user products, such as Google Search and YouTube.</code></p>

<p>We have explained here is the basic use case to deploy the app, for more details, please refer the official guide.</p>

<h3>signup</h3>

<ol>
<li>go to <a href="http://www.cloud.google.com/">got to GCP</a></li>
<li>signup with your email</li>
<li>add the payment details; dont worry, only debit Card needed, they is no harm because of this, they dont take amount from account unless you have to upgrade the account.</li>
</ol>


<p>Note:
  I have used ICICI Debit Account, and they deducted 50Rs from my account to verify and returned the amount. So No Worries, only i got is a 2 rs for MY OTP.</p>

<p><img src="/images/gcp-1/0_1.png" width="300" height="600"></p>

<h3>Create a Project</h3>

<p>Now, create a Project.</p>

<p><img src="/images/gcp-1/1.png" width="800" height="300"></p>

<p>give a name for the project</p>

<p><img src="/images/gcp-&frac12;.png" width="800" height="400"></p>

<h3>Create an instance</h3>

<p>Now the process is create the instance. Instance is something like a virtual machine. This can be fetched from the Compute Engine. Example instances are production, staging etc.</p>

<p><img src="/images/gcp-1/3.png" width="800" height="400"></p>

<p>Now, add some details to complete the instance creation.</p>

<p><img src="/images/gcp-&frac14;.png" width="800" height="400"></p>

<p>I have used is the ubuntu 16.04, you can choose your BootDisk.</p>

<p>Now, important part, need to link the SSH Key to the GCP.</p>

<p><img src="/images/gcp-1/5.png" width="800" height="400"></p>

<p>click on the create instance</p>

<h3>Link SSH to GCP</h3>

<p>go to the metadata and click on the SSH keys and ADD,then paste the public key to there.</p>

<p><img src="/images/gcp-1/13.png" width="800" height="400"></p>

<p>In order to do that, need to copy the public key</p>

<ol>
<li>Show the available SSH keys</li>
</ol>


<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls -al ~/.ssh</span></code></pre></td></tr></table></div></figure></p>

<p><img src="/images/gcp-1/6.png" width="800" height="400"></p>

<ol>
<li>copy the desired public key</li>
</ol>


<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>head ~/.ssh/id_rsa.pub</span></code></pre></td></tr></table></div></figure></p>

<p><img src="/images/gcp-1/7.png" width="800" height="400"></p>

<ol>
<li>Add the public Key to the GCP</li>
</ol>


<p><img src="/images/gcp-1/8.png" width="800" height="400"></p>

<h3>Create a Pem File</h3>

<p>because of security concerns and multiple connectivity of instances, We need to generate the pem file from the public key, this is achieved by using.</p>

<p>open a new terminal and run the below code.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keygen -f ~/.ssh/id_rsa.pub -m &lsquo;PEM&rsquo; -e > public.pem</span></code></pre></td></tr></table></div></figure></p>

<p><img src="/images/gcp-1/9.png" width="100" height="50"></p>

<p>Now the code will generate the pem file in the place of terminal points to , in my case it is home path</p>

<p>Now change the permission of the pem file, by below comand</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chmod 600 public.pem</span></code></pre></td></tr></table></div></figure></p>

<h3>connect the GCP using SSH</h3>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh -i public.pem user_name@external_ip</span></code></pre></td></tr></table></div></figure></p>

<p><img src="/images/gcp-1/14.png" width="800" height="300"></p>

<p>user_name is the name which is shown when we copy the ssh key, here irfana_anoob is the user_name</p>

<p>external-ip is the IP which is given when we create the instance</p>

<p><img src="/images/gcp-1/15.png" width="800" height="300"></p>

<p>this is the Series1, will be posting more posts on this Also.</p>

<p>all set. thanks guys, comment if any error or doubt happend.</p>
]]></content>
  </entry>
  
</feed>

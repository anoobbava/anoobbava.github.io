<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | Awesome Web Blog]]></title>
  <link href="http://anoobbava.github.io/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://anoobbava.github.io/"/>
  <updated>2018-04-12T17:26:04+05:30</updated>
  <id>http://anoobbava.github.io/</id>
  <author>
    <name><![CDATA[Anoob Bava]]></name>
    <email><![CDATA[anoob.bava@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Install Ruby and Postgres to GCP:Series2]]></title>
    <link href="http://anoobbava.github.io/blog/2018/04/12/install-ruby-and-postgres-to-gcp-series2/"/>
    <updated>2018-04-12T15:51:22+05:30</updated>
    <id>http://anoobbava.github.io/blog/2018/04/12/install-ruby-and-postgres-to-gcp-series2</id>
    <content type="html"><![CDATA[<p>Hi All, Welcome to series 2, here are explaining about the ruby and Postgres installation to our GCP Server. If you know about that in linux 16.04 version, you can skip this tutorial. this is entirely based on the ubuntu 16.04 LTS machine and not much . I read the digital ocean, GoRails etc to publish this article and use the tehniques explained by them also.</p>

<h2>Install Ruby</h2>

<p>  first need to connect to our GCP using pem file.</p>

<p>  <img src="/images/series2/0.png" width="800" height="400"></p>

<h3>Install RVM</h3>

<h4>connect gpg keys</h4>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gpg &ndash;keyserver hkp://keys.gnupg.net &ndash;recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/2.png" width="800" height="400"></p>

<h4>Install curl</h4>

<p>  install curl if not installed</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install curl</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/3.png" width="800" height="400"></p>

<h4>Use curl for rvm script</h4>

<p>  Now use the curl to install the rvm script</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\curl -sSL &lt;a href="https://get.rvm.io">https://get.rvm.io&lt;/a> -o rvm.sh</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/4.png" width="800" height="400"></p>

<h4>Install RVM</h4>

<p>  Now, the below command installs the latest version of the rvm and does all the depandancies.</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat rvm.sh | bash -s stable</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/5.png" width="800" height="400">
  Now, install the lates version of Ruby, using the below command</p>

<h4>Install latest Ruby</h4>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm install ruby &ndash;default</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/7.png" width="800" height="400"></p>

<h4>check the ruby Version</h4>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby -v</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/8.png" width="800" height="400"></p>

<h2>Install Postgres</h2>

<p>  execute the below commands one by one</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo sh -c &ldquo;echo &lsquo;deb &lt;a href="http://apt.postgresql.org/pub/repos/apt/">http://apt.postgresql.org/pub/repos/apt/&lt;/a> xenial-pgdg main&rsquo; > /etc/apt/sources.list.d/pgdg.list&rdquo;
</span><span class='line'>    wget &ndash;quiet -O - &lt;a href="http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc">http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc&lt;/a> | sudo apt-key add -
</span><span class='line'>    sudo apt-get update
</span><span class='line'>    sudo apt-get install postgresql-common
</span><span class='line'>    sudo apt-get install postgresql-9.5 libpq-dev</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/9.png" width="800" height="400">
  <img src="/images/series2/10.png" width="800" height="400">
  <img src="/images/series2/11.png" width="800" height="400">
  <img src="/images/series2/12.png" width="800" height="400">
  <img src="/images/series2/13.png" width="800" height="400"></p>

<h4>Roles in postgres</h4>

<p>  by default postgres create a root user called role here is &ldquo;postgres&rdquo;</p>

<p>  to use that</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo -i -u postgres</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/30.png" width="800" height="400"></p>

<h4>Create a New Role</h4>

<p>  We entered to the console, now, create a new Role.</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>createuser &ndash;interactive</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/15.png" width="800" height="400"></p>

<p>now, the user is created, now to check that type</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>psql</span></code></pre></td></tr></table></div></figure></p>

<p>when the console comes, then type</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\du</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/16.png" width="800" height="400"></p>

<h4>To set Password for User</h4>

<p>go to the psql by command</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo -u postgres psql</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/17.png" width="800" height="400"></p>

<p>  type</p>

<p>  <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/password user_name</span></code></pre></td></tr></table></div></figure></p>

<p>  <img src="/images/series2/18.png" width="800" height="400"></p>

<p>this is the end of series, will post more in another series</p>

<p>all set. thanks guys, comment if any error or doubt happend.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails App Deployment Using GCP:Series 1]]></title>
    <link href="http://anoobbava.github.io/blog/2018/04/11/rails-app-deployment-using-gcp/"/>
    <updated>2018-04-11T00:32:23+05:30</updated>
    <id>http://anoobbava.github.io/blog/2018/04/11/rails-app-deployment-using-gcp</id>
    <content type="html"><![CDATA[<h2>Deployment using GCP</h2>

<p><img src="/images/gcp-1/0.png" width="800" height="300"></p>

<p>This will be a series of tutorials in which step by step deployment of a ROR project in Google Cloud or GCP. From here onwards it is mentioned as GCP.</p>

<h2>Why GCP</h2>

<p>I am a huge Fan of Open Source Technologies, I have used the Heroku Free Tier, RedHat,Engine Yard Also. I have been tried to use the AWS for a long time. The issue with AWS is that it has free tier but needed credit card to sign-up.Also In the case of heroku, is a PAAS Application and all the process are automated and customisation is less.</p>

<h4>Pros of GCP</h4>

<ol>
<li>comes from Google , oh! Yaaah</li>
<li>No need of credit Card</li>
<li>Need only debit card with VISA or MASTER CARD.</li>
<li>gives us the $300 credit once signup.</li>
<li>$300 credit for 12 months</li>
</ol>


<p><code>Google Cloud Platform, offered by Google, is a suite of cloud computing services that runs on the same infrastructure that Google uses internally for its end-user products, such as Google Search and YouTube.</code></p>

<p>We have explained here is the basic use case to deploy the app, for more details, please refer the official guide.</p>

<h3>signup</h3>

<ol>
<li>go to <a href="http://www.cloud.google.com/">got to GCP</a></li>
<li>signup with your email</li>
<li>add the payment details; dont worry, only debit Card needed, they is no harm because of this, they dont take amount from account unless you have to upgrade the account.</li>
</ol>


<p>Note:
  I have used ICICI Debit Account, and they deducted 50Rs from my account to verify and returned the amount. So No Worries, only i got is a 2 rs for MY OTP.</p>

<p><img src="/images/gcp-1/0_1.png" width="300" height="600"></p>

<h3>Create a Project</h3>

<p>Now, create a Project.</p>

<p><img src="/images/gcp-1/1.png" width="800" height="300"></p>

<p>give a name for the project</p>

<p><img src="/images/gcp-&frac12;.png" width="800" height="400"></p>

<h3>Create an instance</h3>

<p>Now the process is create the instance. Instance is something like a virtual machine. This can be fetched from the Compute Engine. Example instances are production, staging etc.</p>

<p><img src="/images/gcp-1/3.png" width="800" height="400"></p>

<p>Now, add some details to complete the instance creation.</p>

<p><img src="/images/gcp-&frac14;.png" width="800" height="400"></p>

<p>I have used is the ubuntu 16.04, you can choose your BootDisk.</p>

<p>Now, important part, need to link the SSH Key to the GCP.</p>

<p><img src="/images/gcp-1/5.png" width="800" height="400"></p>

<p>click on the create instance</p>

<h3>Link SSH to GCP</h3>

<p>go to the metadata and click on the SSH keys and ADD,then paste the public key to there.</p>

<p><img src="/images/gcp-1/13.png" width="800" height="400"></p>

<p>In order to do that, need to copy the public key</p>

<ol>
<li>Show the available SSH keys</li>
</ol>


<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls -al ~/.ssh</span></code></pre></td></tr></table></div></figure></p>

<p><img src="/images/gcp-1/6.png" width="800" height="400"></p>

<ol>
<li>copy the desired public key</li>
</ol>


<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>head ~/.ssh/id_rsa.pub</span></code></pre></td></tr></table></div></figure></p>

<p><img src="/images/gcp-1/7.png" width="800" height="400"></p>

<ol>
<li>Add the public Key to the GCP</li>
</ol>


<p><img src="/images/gcp-1/8.png" width="800" height="400"></p>

<h3>Create a Pem File</h3>

<p>because of security concerns and multiple connectivity of instances, We need to generate the pem file from the public key, this is achieved by using.</p>

<p>open a new terminal and run the below code.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keygen -f ~/.ssh/id_rsa.pub -m &lsquo;PEM&rsquo; -e > public.pem</span></code></pre></td></tr></table></div></figure></p>

<p><img src="/images/gcp-1/9.png" width="100" height="50"></p>

<p>Now the code will generate the pem file in the place of terminal points to , in my case it is home path</p>

<p>Now change the permission of the pem file, by below comand</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chmod 600 public.pem</span></code></pre></td></tr></table></div></figure></p>

<h3>connect the GCP using SSH</h3>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh -i public.pem user_name@external_ip</span></code></pre></td></tr></table></div></figure></p>

<p><img src="/images/gcp-1/14.png" width="800" height="300"></p>

<p>user_name is the name which is shown when we copy the ssh key, here irfana_anoob is the user_name</p>

<p>external-ip is the IP which is given when we create the instance</p>

<p><img src="/images/gcp-1/15.png" width="800" height="300"></p>

<p>this is the Series1, will be posting more posts on this Also.</p>

<p>all set. thanks guys, comment if any error or doubt happend.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introduction to Circle CI]]></title>
    <link href="http://anoobbava.github.io/blog/2017/10/24/introduction-to-circle-ci/"/>
    <updated>2017-10-24T20:06:55+05:30</updated>
    <id>http://anoobbava.github.io/blog/2017/10/24/introduction-to-circle-ci</id>
    <content type="html"><![CDATA[<h2>Intro &amp;&amp; Setup Project</h2>

<p>CircleCI helps you ship better code, faster. To kick things off, you&rsquo;ll need to add a config.yml file to your project, and start building. After that, we&rsquo;ll start a new build for you each time make a PR. Similar to travis; here also needed a yml file for configs and update.</p>

<h2>Steps</h2>

<p>1.Signup using github</p>

<p><img src="/images/circleci/intro.png" width="800" height="300"></p>

<ol>
<li>Add our Project</li>
</ol>


<p><img src="/images/circleci/add_project.png" width="800" height="300"></p>

<ol>
<li><p>Create a folder named .circleci and add a fileconfig.yml (so that the filepath in .circleci/config.yml).</p></li>
<li><p>Populate the config.yml with the contents of the below file.</p></li>
</ol>


<script src="https://gist.github.com/anoobbava/2c9417987a3e67210395119aa5083c48.js"></script>


<ol>
<li><p>Update the config.yml to reflect your project&rsquo;s configuration.</p></li>
<li><p>Push this change to GitHub.</p></li>
<li><p>Start building! This will launch your project on Circle CI , now it will analyse the code and check the system for PR.all done, system will automatically test when make our PR.</p></li>
</ol>


<p><img src="/images/circleci/circle_Pr.png" width="800" height="300"></p>

<p>Awesome, we got our error on build we can see what is the error.</p>

<p><img src="/images/circleci/circle_error_pr.png" width="800" height="300"></p>

<p>The issue is we have mentioned is ruby in gem file as 2.3.1 but in the config of circle is 2.4.1. we will update it as another commit.</p>

<p>I Found it, circle CI using docker images pre-built ones, Here we are using the ruby version 2.3.1 in Gemfile and the config.yml added 2.4.1. Going the below url
<a href="https://circleci.com/docs/2.0/circleci-images/#ruby">go to circle docs info</a>
- most matched version is 2.3; now we are commiting using that code. All work fine.Now we select the image,
We can select linux, IOS, or custom host in circle CI, For this tutorial I have used the linux plan, hobbyist one. We can use containers.</p>

<p><img src="/images/circleci/circle_all_test_passed.png" width="800" height="300"></p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Continous Integration Using Travis CI]]></title>
    <link href="http://anoobbava.github.io/blog/2017/10/17/continous-integration-using-travis/"/>
    <updated>2017-10-17T23:57:58+05:30</updated>
    <id>http://anoobbava.github.io/blog/2017/10/17/continous-integration-using-travis</id>
    <content type="html"><![CDATA[<h2>Why Travis CI</h2>

<p>Before you start in to our CI, one must understand what is CI and why the CI is going to help us the development and what is a <em>DevOps</em>.</p>

<p><img src="/images/travis_logo.png" width="600" height="300"></p>

<h2>DevOps</h2>

<ul>
<li>Is a combination of cultural philosophies.</li>
<li>combined to do deviler the products at High Speed.</li>
<li>development and operations teams are no longer &ldquo;siloed.&rdquo;(AWS)</li>
<li>Technology is in path we can minimise the effort and reduce the bugs from the existing system.</li>
<li>DevOps help us to achive better results in minimal Time.</li>
<li>when Continous Integration and Continous Delivery makes us to reduce the development time.</li>
</ul>


<!-- ![devops](images/travis_devops.jpeg) -->


<p><img src="/images/travis_devops.jpeg" width="500" height="300"></p>

<h2>CI(Continous Integration)</h2>

<ul>
<li>Is a development practice.</li>
<li>requires developers to share the code to a common repository.</li>
<li>Each code update is tested by automated build.</li>
<li>if only the automated build is succeeded, then the code is updated to the system.</li>
<li>we have Travis CI, Circle CI for this task.</li>
</ul>


<h2>Travis CI intro</h2>

<ul>
<li>Simple and powerful tool for the CI.</li>
<li>Always free for the Open source repository.</li>
<li>Test and deploy with Confidence.(motto)</li>
<li><a href="https://www.travis-ci.org/">go to Travis</a></li>
<li>facebook and Rails are using this.</li>
</ul>


<h3>workflow</h3>

<!-- ![work flow](images/travis_work_flow.png) -->


<p><img src="/images/travis_work_flow.png" width="1000" height="800"></p>

<h3>PR work flow</h3>

<!-- ![PR flow](images/travis_pr_workflow.png)  -->


<p><img src="/images/travis_pr_workflow.png" width="1000" height="800"></p>

<h2>prerequisites</h2>

<ul>
<li>Active Github Account.</li>
<li>Need to link to Github repo with Travis CI.</li>
<li>test coverage for system.</li>
</ul>


<p>Here we are testing for Ruby on rails.To test our project has test coverage we are using the simplecov gem.Testing using SimpleCov is explained in this <a href="https://anoobbava.wordpress.com/2017/10/03/find-test-coverage-locally/">link</a></p>

<!-- ![simple cov](images/travis_simple_cov.png) -->


<p><img src="/images/travis_simple_cov.png" width="1000" height="800"></p>

<h2>Back in Action</h2>

<p>Next thing what we do is to Login with Github</p>

<!-- ![github login](images/travis_sigin-with-gituhb.png) -->


<p><img src="/images/travis_sigin-with-gituhb.png" width="500" height="200"></p>

<p>All the gitHub Repo&rsquo;s are synched to the Travis-CI.Now Turn ON the Switch against the Repos. We need to update a YML file for travis to automate the testing.There is an online tool to validate the Travis YML using this <a href="https://lint.travis-ci.org/">link</a>.Right now we are discussing only the simple ones for start.</p>

<h2>Sample YML</h2>

<p>In order to function the Travis and install the depandancies, need a config file. travis.yml is that kind of file will help us to implement that feature. Below is sample file. There are other numerous configs, here is the basic to start and running.</p>

<script src="https://gist.github.com/anoobbava/712777537f3d2653db2819b5add3402c.js"></script>


<p>Mentioned only the Ruby and the Version. Also before starting our testing, we need to setup a test database.The reason is we don&rsquo;t want to test the production dB by any chance. Now comes the script part, we are migrating the database to the latest structure and running the rspecs.I have used the codeclimate.</p>

<h2>Why Codeclimate</h2>

<p>codeclimate is a code analysis engine will help to check the code has any issues using gems like breakman and rubocop.Also it has built in analysis engine will help us to analyse the code test coverage and also numerous features like badge for our GitHub account. signup using your Github and authorise access codeclimate to our repo. An advantage is that for opensource repo; the codeclimate is free for lifetime, Cool and Awesome right, thanks to codeclimate for their services.
Login to codeclimate account and goto our repo, settings tab> Test Coverage. there is a token is present. This token is a link between Travis CI and codeclimate.
<img src="/images/travis_test_coverage_cc.png" width="1000" height="800">
Now see the magic, login to our travis account, goto our project> more options > settings > Environment Variables
<img src="/images/travis_environment.png" width="1000" height="800"></p>

<p>create a new environment variable CODECLIMATE_REPO_TOKEN and copy the value from the codeclimate account.</p>

<p>All Set, now only simple task is copy the same token to the .travis.yml file also where XX marked.</p>

<p>note : I am taking the images from my another project for clarity, do not need to confuse with that :D</p>

<script src="https://gist.github.com/anoobbava/79bfabda8e9ef4fdf35f75161920d0ae.js"></script>


<p>Dont forget to add this gems our test group.</p>

<p>checkout the below the code if any doubts with the spec_helper.</p>

<script src="https://gist.github.com/anoobbava/e197d468b7f8d8cc3e404fed9ced1b38.js"></script>


<p>. Next is commit this code and push to master. We can config the travis to run only at the time of PR(Settings of Travis CI corresponding project).
Need to check the settings of the travis-ci of particular repo, like when the build started or start build only when the yml is present like that.</p>

<!-- ![Travis config](images/travis_settings.png) -->


<p><img src="/images/travis_settings.png" width="800" height="200"></p>

<h4>Now it is check-in time.Add the code and made a PR</h4>

<!-- ![checkin the code](images/travis_checkin.png) -->


<p><img src="/images/travis_checkin.png" width="600" height="200"></p>

<h4>After made PR, the Travis-CI is analysing the code</h4>

<!-- ![travis pr checking](images/travis_pr_checking.png) -->


<p><img src="/images/travis_checkin.png" width="600" height="200"></p>

<h4>we can see the status of PR by clicking on the see details from gitHub page.</h4>

<!-- ![travis success](images/travis_success.png) -->


<p><img src="/images/travis_success.png" width="600" height="200"></p>

<h4>Hooray, all success, now we can see the detailed log for details.</h4>

<!-- ![travis log](images/travis_log.png) -->


<p><img src="/images/travis_log.png" width="800" height="300"></p>

<p>Image courtesy: <a href="https://www.travis-ci.org/">travis</a></p>

<p></p>
]]></content>
  </entry>
  
</feed>
